FMS Changelog
=============

Whenever you make additions/changes to the repo, please edit this file to give a breakdown of all changes each week.
Legend:
+ New
* Changed
! Fixed

v0.5 - Week 11 

Server:
! Fix GET /api/buoy_groups/id/buoy_instances and GET /api/buoys/id/buoy_instances HTTP error 500
* Buoys and Buoy Groups are now archived instead of delete. This removes them from the interface but they remain in the database.
+ Add DELETE /api/sensor_types/id - just archives, doesn't do a hard delete
+ When a Buoy acknowledges a set of commands, each command is marked as "sent" and the current time is now recorded as well

v0.4 - Week 10 8/10

Deployment:
+ A new VPS can now be setup very easily. Docker is being used for deployment. After cloning the source and copying the SSL certificates onto the VPS, it's just a matter of running one command in terminal. This runs the Go server, mysql database, and phpmyadmin, all behind an NGINX reverse proxy.
+ HTTPS is live, and it only applies to some routes. Buoys will be communicating over HTTP, while the web app and iOS app will be communicating over HTTPS.

Server:
! Change GET /api/export?readings to POST /api/readings/export to fix "request url is too long" bug
+ The Go server now runs two HTTP servers, one for the web app and iOS app, and another for all requests that come from the buoy
! GET /api/readings now properly returns readings with timestamp in ascending order, within a buoy instance, within a buoy group
* Json Web Token authentication now uses HMAC instead of RSA. FMS_PUBLIC_KEY and FMS_PRIVATE key are no longer needed.
* GET /api/buoy_instances?active=true now also return buoy instances that have no readings
* Condense JSON on POST /buoys/api/readings to reduce memory load on buoy microcontroller
+ Add GET/buoys/api/commands?guid=test for the Buoy to retrieve "unsent" commands. This returns a lightweight custom CSV format instead of JSON to reduce memory load on the buoy microcontrolelr
+ Add POST /buoys/commands/ack for the Buoy to tell the server which commands have been applied

Web App:
* Major styling changes - spacing, font sizes, colours, inputs, buttons, popups, etc.
! Fix password reset submit form.
! Fix bugs when updating filters and displaying markers.
* Charts pane can be minimised.
+ Implement basic chart functionality.
+ Implement sensor type configuration on Admin page.
* Allow editing of buoys on Admin page.

iOS App:
* App is now called FlounderMobile, to be consistent with the web application.
+ More info dialog when buoys are pressed, containing specific data and buoy commands; window is able to size automatically to updates.
* Significant changes to interface colours and shapes to be more consistent with the web app.
+ Filters for buoy groups, allowing users to narrow the overall list of results.
* Updated JSON handling to future-proof against server changes.
! Some minor interface issues.
! Colours being inverted for buoy marker groups.
! Filters breaking interface when many groups are loaded at once.

v0.3 - Week 9 6/10
Server:
+ Add Apache logging for web requests
+ Add POST /api/users/id/change_password - Can now change user password through the api
+ Add POST /api/forgot_password and GET /api/reset_password?token=gdfgdsfg - Forgot password routes have been implemented
+ Add POST /api/sensor_types - Can now add sensor types through the api
+ Add PUT /api/sensor_types/id - Can now update a sensor type through the api
+ Add lower bound and upper bound fields to sensor type
! Fixed problem where decimals were maxing out at 999.999 in the database
! Fixed problem where GET /api/buoy_instances?active=true was returning duplicate instances

iOS App:
* Support for iOS 9. Our app is now able to support devices using both 8 and 9.
+ Missing error messages for internet disconnection and loss of location information.
+ Missing error message for connection failure for buoy information
+ App now loads buoy information from the server with authorization.
* Map markers now show colour depending upon their associated group. These markers are animated and generally pretty cool.
+ Added name/email section to top of map page to show which user is logged in.
* Updated colours to be consistent with the web app.
! Issue where ungrouped markers were incorrectly coloured.
! Many small interface issues and inconsistencies.
+ Map markers now display their name, group, location and a button for more info in their callout.

Web app:
* Refactor dashboard to simplify code.
! Population of buoys list on dashboard.
! Filtering of map markers on dashboard.
* Format last login time as from now.
+ Add placeholders to Add User input fields.
+ Dashboard reacts to buoy group and instance name changes made in config page without requiring page refresh.
* Allow time range filters to accept dates without needing to specify times.
* Dashboard styling.
+ Display units next to dashboard sensor filters.
* Filter sections no longer have individual scrollbars.
+ Optimise dashboard for small screens.
+ Each buoy instance marker on the map has its own colour.
* Performance optimisations.
+ Use CDNs in production to reduce load time.
+ Show alert modals when updating stuff in the database, or a response from the server contains an error.
+ Implement tabbed interface on admin page.
* Restructure config page:
    + Implement tabbed interface.
    + Implement drag drop of buoys between groups.
    * Replace edit button with icon.
    * Temporarily disable group changing.
    + Show buoy status details table.
* Improve loading time of warning page.
+ Implement reset password.
+ Implement change password.
* Change 'Logout' button on navbar to an 'Account' dropdown menu



v0.2 - Week 8 22/9
Server:
* Readings table has been split into two tables, "reading" and "sensor_reading". A reading has many sensor readings. When a "reading" is taken the buoy checks its sensors at the same time, so we can assume that the latitude, longitude and timestamp are all going to be the same for each "sensor_reading".

* All SQL queries related to readings have been updated to reflect the changes to the readings in the database.

! GET /api/warnings now properly returns all warnings for warning triggers that have been satisfied. The old implementation used to only check if a warning trigger was satisfied for ONE sensor from the most recent reading for each active buoy instance. This has been corrected so now warning triggers are checked against EVERY sensor in the most recent reading for each active buoy instance.

* GET /api/buoy_instances?active_true now also returns the last known location for a buoy instance. This will be used by the iOS app to display the buoys on the map.

iOS app:
+ Added 'Remember me' option to login screen for email/password.
+ Added settings screen plus a button to access it.
+ Added server address option to settings screen, specifying which server to connect to.
! Fixed issue where connecting to nonexistent server froze app.

Web app:
* Change font to Lato
* Change navbar colour to an aqua-blue
* Increase size of the map on the Dashboard
! Fix alignment issues on Filters on the Dashboard

v0.1 (MVP) - Week 7 15/9
+ Initial release
