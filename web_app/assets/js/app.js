!function(){"use strict";angular.module("app",["ui.router","mgcrea.ngStrap","mgcrea.ngStrap.helpers.dimensions","mgcrea.ngStrap.helpers.dateParser","mgcrea.ngStrap.helpers.parseOptions","mgcrea.ngStrap.tooltip","mgcrea.ngStrap.datepicker","mgcrea.ngStrap.timepicker","mgcrea.ngStrap.button","mgcrea.ngStrap.select","chart.js","app.auth","app.dashboard","app.config"])}(),function(){"use strict";angular.module("app.auth",[])}(),function(){"use strict";angular.module("app.config",[])}(),function(){"use strict";angular.module("app.dashboard",[])}(),function(){"use strict";angular.module("app").config(["$datepickerProvider","$timepickerProvider","$httpProvider",function(e,t,n){n.interceptors.push("authInterceptor"),angular.extend(e.defaults,{autoclose:!0,dateFormat:"d/M/yy",modelDateFormat:"d/M/yy",dateType:"string",startWeek:1}),angular.extend(t.defaults,{autoclose:!1,timeFormat:"h:mm a",modelTimeFormat:"h:mm a",timeType:"string"})}])}(),function(){"use strict";angular.module("app").constant("SERVER_ADDRESS","http://localhost:8080")}(),function(){"use strict";angular.module("app").run(["$rootScope","$state","$stateParams",function(e,t,n){e.$state=t,e.$stateParams=n}]).config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/dashboard"),e.state("login",{url:"/login",templateUrl:"/app/auth/login.html"}).state("dashboard",{url:"/dashboard",controller:"DashboardController",controllerAs:"vm",templateUrl:"/app/dashboard/dashboard.html"}).state("config",{url:"/config",controller:"ConfigController",controllerAs:"vm",templateUrl:"/app/config/config.html"}).state("warnings",{url:"/warnings"})}])}(),function(){"use strict";function e(e,t,n,r){function o(){r.login(s.username,s.password).then(function(e){n.authed()&&(s.authed=!0,t.go("dashboard"),a())},function(e){alert("Invalid username or password")})}function i(){r.logout(),s.authed=!1,t.go("login")}function a(){s.username="imafake",s.password="ekafami"}var s=this;s.authed=n.authed(),s.login=o,s.logout=i,a(),e.$on("$stateChangeStart",function(e,r){n.authed()?"login"==r.name&&(e.preventDefault(),t.is("login")&&t.go("dashboard")):"login"!=r.name&&(e.preventDefault(),t.go("login"))})}angular.module("app.auth").controller("AuthController",e),e.$inject=["$rootScope","$state","auth","server"]}(),function(){"use strict";function e(e){function t(e,t){}function n(){e.localStorage.removeItem("token")}function r(){var e=i();if(e){var t=a(e);return moment().unix()<=t.exp}return!1}function o(t){e.localStorage.token=t}function i(t){return e.localStorage.token}function a(t){var n=t.split(".")[1],r=n.replace("-","+").replace("_","/");return JSON.parse(e.atob(r))}return{login:t,logout:n,authed:r,getToken:i,saveToken:o}}angular.module("app.auth").factory("auth",e),e.$inject=["$window"]}(),function(){"use strict";function e(e){function t(e){return e}function n(t){return t.data.token&&e.saveToken(t.data.token),t}return{request:t,response:n}}angular.module("app.auth").factory("authInterceptor",e),e.$inject=["auth"]}(),function(){"use strict";function e(e){function t(e){r.sensorsEdit[e]&&(r.sensors[e].unconfigured=!1),r.sensorsEdit[e]=!r.sensorsEdit[e]}function n(e){return e.name&&e.units?!0:!1}var r=this;r.sensors=e.getSensors(),r.sensorsEdit=[],r.toggleEdit=t,r.sensorValid=n;for(var o=0;o<r.sensors.length;o++)r.sensorsEdit.push(!1)}angular.module("app.config").controller("ConfigController",e),e.$inject=["server"]}(),function(){"use strict";function e(e,t,n){function r(e,r){s.buoys[e]=r,t.updateBuoys(),n.updateReadings()}function o(){if(i()){var e=u+" "+d;"range"==s.times.type?(s.times.range.from=moment(s.times.inputs.range.from.date+" "+s.times.inputs.range.from.time,e),s.times.range.to=moment(s.times.inputs.range.to.date+" "+s.times.inputs.range.to.time,e)):"point"==s.times.type&&(s.times.point=moment(s.times.inputs.point.date+" "+s.times.inputs.point.time,e)),t.updateTimes(),n.updateReadings()}}function i(){if("all"==s.times.type)return!0;if("range"==s.times.type){var e=s.times.inputs.range.from.date,t=s.times.inputs.range.from.time,n=s.times.inputs.range.to.date,r=s.times.inputs.range.to.time;if(e&&t&&n&&r)return!0}return"point"==s.times.type&&s.times.inputs.point.date?!0:!1}function a(){t.updateSensors(),n.updateReadings()}var s=this;s.buoys=t.buoys(),s.times=t.times(),s.sensors=t.sensors(),s.updateBuoysFilter=r,s.updateTimesFilter=o,s.updateSensorsFilter=a,t.initialise().then(function(){s.buoys=t.buoys(),s.times=t.times(),s.sensors=t.sensors(),t.updateFilters(),n.updateReadings()});var u="D/M/YY",d="h:mm A";e.ready(function(){n.initialiseMap()})}angular.module("app.dashboard").controller("DashboardController",e),e.$inject=["$document","dashboard","map"]}(),function(){"use strict";function e(e,t){function n(){var e=t.getReadings();return e.then(function(e){console.log(e),B=e.data,o()},function(e){console.log("error"),console.log(e)}),e}function r(){$.buoys={},i(),$.times={type:"all",range:{from:null,to:null},point:null,pointReadings:{},inputs:{range:{from:{date:"",time:""},to:{date:"",time:""}},point:{date:"",time:""}}},$.sensors={},$.sensorInputs={},m()}function o(){i(),m()}function i(){for(var e=0;e<B.length;e++)$.buoys.hasOwnProperty(B[e].buoy)||($.buoys[B[e].buoy]=!0)}function a(){return x}function s(){return $.buoys}function u(){return $.times}function d(){m();for(var e in $.sensorInputs)$.sensorInputs.hasOwnProperty(e)&&($.sensors[e].inputs=$.sensorInputs[e]);var t=[];for(var e in $.sensors)$.sensors.hasOwnProperty(e)&&$.sensors[e].display&&t.push($.sensors[e]);return t}function p(){y()}function l(){"point"==$.times.type&&f(),y()}function c(){y()}function m(){for(var e=t.getSensors(),n=0;n<e.length;n++)$.sensors[e[n].id]=e[n],$.sensorInputs.hasOwnProperty(e[n].id)||($.sensorInputs[e[n].id]={enabled:!1,options:[">","<","="],selected:">",value:""}),e[n].display||($.sensorInputs[e[n].id].enabled=!1)}function g(){for(var e=x,t=moment.unix(e[0].timestamp),n=1;n<e.length;n++)moment.unix(e[n].timestamp).isBefore(t)&&(t=moment.unix(e[n].timestamp));return t}function f(){for(var e={},t=0;t<B.length;t++){var n=B[t];if(e.hasOwnProperty(n.buoy)){var r=e[n.buoy].time,o=n.timestamp,i=moment.unix(r).diff($.times.point),a=moment.unix(o).diff($.times.point);Math.abs(a)<Math.abs(i)&&(e[n.buoy]={id:n.id,time:n.timestamp})}else e[n.buoy]={id:n.id,time:n.timestamp}}$.times.pointReadings=e}function y(){x=e("filter")(B,function(e){if(!h(e))return!1;if(!b(e))return!1;for(var t in $.sensorInputs)if($.sensorInputs.hasOwnProperty(t)&&!v(t,$.sensorInputs[t],e))return!1;return!0})}function h(e){return $.buoys[e.buoy]?!0:!1}function b(e){if("range"==$.times.type){var t=moment.unix(e.timestamp);if(!t.isBetween($.times.range.from,$.times.range.to))return!1}else if("point"==$.times.type&&$.times.pointReadings.hasOwnProperty(e.buoy)&&$.times.pointReadings[e.buoy].id!=e.id)return!1;return!0}function v(e,t,n){if(!t.enabled)return!0;var r=parseInt(t.value,10);if(">"==t.selected){if(n.readings[e]<=r)return!1}else if("<"==t.selected){if(n.readings[e]>=r)return!1}else if("="==t.selected&&n.readings[e]!=r)return!1;return!0}function w(e){var t=moment.unix(e.timestamp),n=$.times;if("all"==n.type){var r=moment(),o=r.clone().subtract(2,"weeks");return S(t,o,r)}if("range"==n.type){var r=n.range.to,o=n.range.from;return S(t,o,r)}if("point"==n.type){if(null===n.point)return 1;var r=n.point,o=r.clone().subtract(2,"weeks");return S(t,o,r)}}function S(e,t,n){return e.isBefore(t)?0:e.isBefore(n)?e.diff(t)/n.diff(t):1}var B=[],x=[],$={};return r(),{initialise:n,readings:a,buoys:s,times:u,sensors:d,updateBuoys:p,updateTimes:l,updateFilters:y,updateSensors:c,getOldestReading:g,getRelativeAge:w}}angular.module("app.dashboard").factory("dashboard",e),e.$inject=["$filter","server"]}(),function(){"use strict";function e(e){function t(){var t=[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"transit.station",elementType:"labels",stylers:[{visibility:"off"}]}];l.styles=t,d=new google.maps.Map(document.getElementById("map-canvas"),l),google.maps.event.addListener(d,"zoom_changed",function(){l.zoom=d.getZoom()}),google.maps.event.addListener(d,"center_changed",function(){l.center=d.getCenter()}),google.maps.event.addListener(d,"maptypeid_changed",function(){l.mapTypeId=d.getMapTypeId()}),google.maps.event.addListener(d,"click",function(){g&&s()});for(var n=e.readings(),o=0;o<n.length;o++)r(n[o])}function n(){for(var t=e.readings(),n=[],s=0;s<t.length;s++)n.push(t[s].id);for(var u in c)c.hasOwnProperty(u)&&(u=parseInt(u,10),-1==n.indexOf(u)&&o(u));for(var s=0;s<t.length;s++){var d=t[s].id;c.hasOwnProperty(d)?(c[d].setOpacity(a(t[s])),-1!=m.indexOf(d)&&i(d)):r(t[s])}}function r(e){var t=new google.maps.Marker({position:new google.maps.LatLng(e.latitude,e.longitude),map:d,opacity:a(e)});google.maps.event.addListener(t,"click",function(){u(e,t)}),c[e.id]=t}function o(e){c[e].setMap(null),m.push(e),g&&-1!=m.indexOf(f)&&s()}function i(e){c[e].setMap(d),m.splice(m.indexOf(e),1)}function a(t){var n=e.getRelativeAge(t),r=.3;return n*(1-r)+r}function s(){p.close(),g=!1}function u(e,t){if(!g||(s(),e.id!=f)){var n=moment.unix(e.timestamp).format("D MMMM h:mm A"),r="<div><h5 style='color: white'>Buoy "+e.buoy+"</h5>"+n+"<br>---<br>Battery: "+e.readings.battery+"<br>Pressure: "+e.readings.pressure+"<br>Sea level: "+e.readings.sealevel+"<br>Turbidity: "+e.readings.turbidity+"</div>";p=new InfoBox({content:r,pixelOffset:new google.maps.Size(-60,0),zIndex:null,boxStyle:{color:"white","background-color":"rgb(40, 40, 40)",width:"120px",padding:"10px","border-radius":"10px"},closeBoxMargin:"-6px -6px 2px 2px"}),p.open(d,t),g=!0,f=e.id}}var d,p,l={zoom:11,center:new google.maps.LatLng(-27.573704,153.055818),mapTypeId:google.maps.MapTypeId.ROADMAP},c={},m=[],g=!1,f=-1;return{initialiseMap:t,updateReadings:n}}angular.module("app.dashboard").factory("map",e),e.$inject=["dashboard"]}(),function(){"use strict";function e(e,t,n){function r(){console.log("querying server");var r=n.getToken(),o={headers:{Authorization:"Bearer "+r}};return e.get(t+"/api/readings",o)}function o(){return s}function i(n,r){var o={email:n,password:r};return e.post(t+"/api/login",o)}function a(){n.logout()}var s=[{id:"battery",name:"Battery",description:"Battery level of buoy",colour:"",units:"%",lowerBound:0,upperBound:100,display:!0,unconfigured:!1},{id:"turbidity",name:"Turbidity",description:"Water quality around buoy",colour:"",units:"g/ml",lowerBound:0,upperBound:70,display:!0,unconfigured:!1},{id:"pressure",name:"",description:"",colour:"",units:"",lowerBound:-1,upperBound:-1,display:!1,unconfigured:!0}];return{getReadings:r,getSensors:o,login:i,logout:a}}angular.module("app").factory("server",e),e.$inject=["$http","SERVER_ADDRESS","auth"]}(),function(){"use strict";function e(){function e(){return[{id:1,buoy:1,timestamp:1438933614,latitude:-27.44613423,longitude:153.07834625,readings:{battery:90,pressure:140,sealevel:21,turbidity:14}},{id:2,buoy:2,timestamp:1438588117,latitude:-27.42693772,longitude:153.20674896,readings:{battery:70,pressure:122,sealevel:44,turbidity:4}},{id:3,buoy:2,timestamp:1438760876,latitude:-27.491475,longitude:153.006655,readings:{battery:45,pressure:85,sealevel:15,turbidity:45}},{id:4,buoy:4,timestamp:1438847291,latitude:-27.400357,longitude:153.177995,readings:{battery:75,pressure:97,sealevel:33,turbidity:66}},{id:77,buoy:1,timestamp:1438328839,latitude:-27.44713423,longitude:153.09234625,readings:{battery:83,pressure:118,sealevel:24.5,turbidity:8}}]}function t(){return[{id:"battery",name:"Battery",description:"Battery level of buoy",colour:"",units:"%",lowerBound:0,upperBound:100,display:!0,unconfigured:!1},{id:"turbidity",name:"Turbidity",description:"Water quality around buoy",colour:"",units:"g/ml",lowerBound:0,upperBound:70,display:!0,unconfigured:!1},{id:"pressure",name:"",description:"",colour:"",units:"",lowerBound:-1,upperBound:-1,display:!1,unconfigured:!0}]}function n(){}function r(){}return{getReadings:e,getSensors:t,login:n,logout:r}}angular.module("mock.server",[]).factory("server",e)}();
//# sourceMappingURL=data:application/json;base64,